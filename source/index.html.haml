---
pageable: true
---
.jumbotron
  %h1
    Deploy and Manage your 
    %a{:href => "http://docker.io"} Docker
    containers.
  %p.lead
    Project Atomic integrates the tools and patterns of container-based application 
    and service deployment with trusted operating system platforms to deliver an 
    end-to-end hosting architecture that's modern, reliable and secure.

  %p
    Cloud images are available for download, supporting VirtualBox, QEMU/KVM and OpenStack. Support for
    bare metal installation is coming.
   
  %p.buttons
    %a.btn.btn-default{:href => "/download" }
      %i.fa.fa-rocket
      Get Started
      %i.fa.fa-long-arrow-right

  = partial "social"

.row.featurette
  .col-sm-7.col-md-7
    %h2 Making Distributions Smaller and Faster
    %p

      An Atomic Controller is a lean operating system designed to run Docker
      containers, built from upstream CentOS, Fedora, or Red Hat Enterprise
      Linux RPMs. It provides all the benefits of the upstream distribution, plus
      the ability to perform atomic upgrades and rollbacks &mdash; giving the best
      of both worlds: A modern update model from a Linux distribution you know
      and trust.

    %p

      This will be a chapter that ties all this to OSTree with links

  .col-sm-5.col-md-5
    .text-center
      %img{:alt => "Speeding things up!", "src" => "/images/speedboat.png"}/

.row.featurette
  .col-sm-5.col-md-5
    .text-center
      %img{:alt => "Speeding things up!", "src" => "/images/secure-containers.png"}/
  .col-sm-7.col-md-7
    %h2 Secure Production Containers
    %p

      Running containers in production systems demands strong safeguards &mdash; especially
      in multi-tenant environments. Atomic Controllers use SELinux to protect and
      confine Docker containers with strict mandatory access control inside Linux
      Container namespaces.

    %p

      This will be a chapter that ties all this to SELinux and the rest.

.row.featurette
  .col-sm-7.col-md-7
    %h2 Integrated and Portable
    %p

      Docker containers can easily move across environments &mdash; from a developers laptop to
      a production host, or even across operating systems.  When combined with #{link_to "systemd", "/docs/systemd"},
      administrators can be certain those containers run on startup, restart when they crash, and are
      audited, logged, and securely managed. Atomic taps #{link_to "geard", "/docs/geard"} to install and link
      Docker containers into systemd and coordinate these containers across hosts.

    %p

      This to-be-written chapter ties the above to GearD and systemd.  Link to systemd should be to the
      "Integrating Docker and Systemd" article Clayton hasn't written yet

  .col-sm-5.col-md-5
    %img.img-responsive{:alt => "Generic placeholder image", "src" => "http://place-hoff.com/324/151"}/

.row.featurette
  .col-sm-5.col-md-5
    %img{:alt => "Generic placeholder image", "src" => "/images/cockpit.png"}/

  .col-sm-7.col-md-7
    %h2 Unified Management from Containers to the OS
    %p

      Containers are elastic and dynamic, and you need management that is just as
      dynamic. #{link_to "Cockpit", "/docs/cockpit"} enables administration of Linux servers via a Web browser, letting
      admins manage storage, services, and inspect journals straight from the browser, and
      directly inspect your containers and images. Atomic also makes it easy to integrate
      your existing monitoring infrastructure in privileged containers.

    %p

      This will be a chapter that ties all this to Cockpit and stuff, linking for more info

.row.featurette
  .col-sm-12.col-md-12
    %p.text-center Ready to try Atomic?
    %p.text-center.buttons
      %a.btn.btn-default{:href => "/download"}
        %i.fa.fa-rocket
        Get Started
        %i.fa.fa-long-arrow-right
